View(globaldata)
runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
View(globaldata2)
runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
runApp('COVID PROJECT')
runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
runApp('COVID PROJECT')
newD <- globaldata2
newD
head(newD)
library(shiny)
library(shiny.semantic)
library(semantic.dashboard)
library(plotly)
library(DT)
library(readxl)
library(dplyr)
library(ggplot2)
library(maptools)
library(rgeos)
library(ggmap)
library(scales)
library(RColorBrewer)
library(lubridate)
library(tibbletime)
library(sjmisc)
set.seed(8000)
newD <- subset(newD, select = c(newD$date_announced,newD$current_status))
newD <- subset(newD, select = c(date_announced,current_status))
View(newD)
newD %>% group_by(date_announced) %>% summarise(recovered = count(current_status))
newD %>% group_by(date_announced) %>% summarise_(recovered = count(current_status))
shiny::runApp('COVID PROJECT')
View(HEADERDATA)
HEADERDATA["Recovered"]
HEADERDATA[HEADERDATA]
HEADERDATA
HEADERDATA <- rename(HEADERDATA, x)
colnamHEADERDATA)
colnam(HEADERDATA)
colname(HEADERDATA)
colnames(HEADERDATA)
HEADERDATA["HEADERDATA"]
HEADERDATA["HEADERDATA",]
HEADERDATA["HEADERDATA":]
HEADERDATA["HEADERDATA"::]
HEADERDATA["recovered"]
HEADERDATA["recovered",]
HEADERDATA["Recovered",]
HEADERDATA["Recovered",]
View(HEADERDATA)
HEADERDATA["Recovered",]
HEADERDATA["Migrated",]
HEADERDATA$HEADERDATA
HEADERDATAR <- filter(HEADERDATA, HEADERDATA$HEADERDATA == "Recovered" )
HEADERDATAR <- filter(HEADERDATA, HEADERDATA == "Recovered" )
View(HEADERDATAR)
runApp('COVID PROJECT')
runApp('COVID PROJECT')
reorder(L,L$date_announced)
library(shiny)
library(shiny.semantic)
library(semantic.dashboard)
library(plotly)
library(DT)
library(readxl)
library(dplyr)
library(ggplot2)
library(maptools)
library(rgeos)
library(ggmap)
library(scales)
library(RColorBrewer)
library(lubridate)
library(tibbletime)
library(sjmisc)
reorder(L,L$date_announced)
LineChartR = filter(newD2, current_status == "Recovered")
LineChartD = filter(newD2, current_status == "Deceased")
LineChartA = filter(newD2, current_status == "Hospitalized")
fig <- plot_ly(newD2, x = as.Date(newD2$date_announced,"%d/%m/%Y"),y = LineChartA$count,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig
L <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
L <- L <- merge(L,LineChartR,by = 'date_announced',all = TRUE)
L
fig
fig <- plot_ly(newD2, x = as.Date(newD2$date_announced,"%d/%m/%Y"),y = LineChartA$count,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
newD2 <- globaldata2 %>%
group_by(date_announced,current_status) %>%
summarise(count = n())
newD2 <- globaldata2 %>%
group_by(date_announced,current_status) %>%
summarise(count = n())
LineChartR = filter(newD2, current_status == "Recovered")
LineChartD = filter(newD2, current_status == "Deceased")
LineChartA = filter(newD2, current_status == "Hospitalized")
fig <- plot_ly(newD2, x = as.Date(newD2$date_announced,"%d/%m/%Y"),y = LineChartA$count,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig
L <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
L <- L <- merge(L,LineChartR,by = 'date_announced',all = TRUE)
L
reorder(L,L$date_announced)
L
L[order(as.Date(
L$date_announced, format="%d/%m%Y"
))]
L[order(as.Date(
L$date_announced, format="%d/%m/%Y"
))]
L[order(as.Date(L$date_announced, format="%d/%m/%Y"))]
L[order(as.Date(L$date_announced, format="%d/%m/%Y")),]
View(globaldata2)
L <- mutate_all(L, ~if_else(is.na(.), 0, .))
replace_na(L,0)
?replace_na
replace_na(L,value = 0)
L
L <- replace_na(L,value = 0)
L <- replace_na(L,value = 0)
L <- replace_na(x= L,value = 0)
L
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
Combined <- replace_na(x= Combined,value = 0)
fig <- plot_ly(newD2, x = as.Date(newD2$date_announced,"%d/%m/%Y"),y = LineChartA$count,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
View(Combined)
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$count.x,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$count.x,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
Combined <- replace_na(x= Combined,value = 0)
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
Combined <- replace_na(x= Combined,value = 0)
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$count.x,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig
fig <- fig %>% layout(xaxis=list(range = c(min(1),max(plotdata$Month))))
fig <- fig %>% layout(xaxis=list(range = c(min(1),max(Combined$count.x))))
fig
fig <- fig %>% layout(taxis=list(range = c(min(1),max(Combined$count.x))))
fig
fig <- fig %>% layout(yaxis=list(range = c(min(1),max(Combined$count.x))))
fig
View(globalTSD)
rename(Combined, "count.x" = "Hospitalized")
rename(Combined, "Hospitalized" = "count.x")
rename(Combined, "Hospitalized" = "count.x")
rename(Combined, "Deceased" = "count.y")
rename(Combined, "Recovered" = "count")
Combined <- rename(Combined, "Hospitalized" = "count.x")
Combined <- rename(Combined, "Deceased" = "count.y")
Combined <- rename(Combined, "Recovered" = "count")
Combined <- Combined[c("date_announced","Hospitalized","Recovered","Deceased")]
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$count.x,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig
transform(xout,cumFreq = cumsum(Combined$Hospitalized))
transform(Combined$Hospitalized,cumFreq = cumsum(Combined$Hospitalized))
transform(LineChartR$count,cumFreq = cumsum(LineChartR$count))
LineChartR$count <- transform(LineChartR$count,cumFreq = cumsum(LineChartR$count))
View(LineChartR)
LineChartR$count <- transform(LineChartR$count,cumFreq = cumsum(LineChartR$count))
View(LineChartR)
LineChartR$n <- transform(LineChartR$count,cumFreq = cumsum(LineChartR$count))
transform(LineChartR$count,cumFreq = cumsum(LineChartR$count))
transform(LineChartR$count,cumFreq = cumsum(LineChartR$count))
LineChartR = filter(newD2, current_status == "Recovered")
transform(LineChartR$count,cumFreq = cumsum(LineChartR$count))
as.data.frame(transform(LineChartR$count,cumFreq = cumsum(LineChartR$count)))
LineChartR$count <- as.data.frame(transform(LineChartR$count,cumFreq = cumsum(LineChartR$count)))
View(LineChartR)
View(LineChartR)
View(LineChartR)
LineChartR$count <- as.data.frame(transform(LineChartR$count,cumFreq = cumsum(LineChartR$count)))
View(LineChartR)
LineChartR = filter(newD2, current_status == "Recovered")
LineChartR = filter(newD2, current_status == "Recovered")
LineChartR$count <- as.data.frame(transform(LineChartR$count,cumFreq = cumsum(LineChartR$count)))
dummy <- as.data.frame(transform(LineChartR$count,cumFreq = cumsum(LineChartR$count)))
LineChartR = filter(newD2, current_status == "Recovered")
dummy <- as.data.frame(transform(LineChartR$count,cumFreq = cumsum(LineChartR$count)))
dummy
LineChartR$count <- dummy$cumFreq
View(LineChartR)
LineChartR = filter(newD2, current_status == "Recovered")
dummy <- as.data.frame(transform(LineChartR$count,cumFreq = cumsum(LineChartR$count)))
LineChartR$count <- dummy$cumFreq
LineChartD = filter(newD2, current_status == "Deceased")
dummy <- as.data.frame(transform(LineChartD$count,cumFreq = cumsum(LineChartD$count)))
LineChartD$count <- dummy$cumFreq
LineChartA = filter(newD2, current_status == "Hospitalized")
dummy <- as.data.frame(transform(LineChartA$count,cumFreq = cumsum(LineChartA$count)))
LineChartA$count <- dummy$cumFreq
Combined <- rename(Combined, "Hospitalized" = "count.x")
Combined <- rename(Combined, "Deceased" = "count.y")
Combined <- rename(Combined, "Recovered" = "count")
Combined <- Combined[c("date_announced","Hospitalized","Recovered","Deceased")]
transform(Combined$Hospitalized,cumFreq = cumsum(Combined$Hospitalized))
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$count.x,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig
Combined <- rename(Combined, "Hospitalized" = "count.x")
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
LineChartD$count <- dummy$cumFreq
dummy <- as.data.frame(transform(LineChartD$count,cumFreq = cumsum(LineChartD$count)))
LineChartD$count <- dummy$cumFreq
View(HEADERDATAD)
LineChartD = filter(newD2, current_status == "Deceased")
dummy <- as.data.frame(transform(LineChartD$count,cumFreq = cumsum(LineChartD$count)))
LineChartD$count <- dummy$cumFreq
LineChartR = filter(newD2, current_status == "Recovered")
dummy <- as.data.frame(transform(LineChartR$count,cumFreq = cumsum(LineChartR$count)))
LineChartR$count <- dummy$cumFreq
View(LineChartA)
LineChartD = filter(newD2, current_status == "Deceased")
dummy <- as.data.frame(transform(LineChartD$count,cumFreq = cumsum(LineChartD$count)))
LineChartD$count <- dummy$cumFreq
View(LineChartD)
LineChartA = filter(newD2, current_status == "Hospitalized")
dummy <- as.data.frame(transform(LineChartA$count,cumFreq = cumsum(LineChartA$count)))
LineChartA$count <- dummy$cumFreq
View(LineChartA)
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
View(Combined)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
View(Combined)
combined <- Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
View(combined)
Combined <- Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
Combined <- replace_na(x= Combined,value = 0)
LineChartR = filter(newD2, current_status == "Recovered")
LineChartD = filter(newD2, current_status == "Deceased")
LineChartA = filter(newD2, current_status == "Hospitalized")
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined <- Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
Combined <- replace_na(x= Combined,value = 0)
dummy <- as.data.frame(transform(Combined$count.x,cumFreq = cumsum(Combined$count.x)))
Combined$count.x <- dummy$cumFreq
dummy <- as.data.frame(transform(Combined$count.x,cumFreq = cumsum(Combined$count.x)))
Combined$count.x <- dummy$cumFreq
dummy <- as.data.frame(transform(Combined$count.y,cumFreq = cumsum(Combined$count.y)))
Combined$count.y <- dummy$cumFreq
dummy <- as.data.frame(transform(Combined$count,cumFreq = cumsum(Combined$count)))
Combined$count <- dummy$cumFreq
Combined <- rename(Combined, "Hospitalized" = "count.x")
Combined <- rename(Combined, "Deceased" = "count.y")
Combined <- rename(Combined, "Recovered" = "count")
Combined <- Combined[c("date_announced","Hospitalized","Recovered","Deceased")]
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$count.x,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig
newD2 <- globaldata2 %>%
group_by(date_announced,current_status) %>%
summarise(count = n())
LineChartR = filter(newD2, current_status == "Recovered")
LineChartD = filter(newD2, current_status == "Deceased")
LineChartA = filter(newD2, current_status == "Hospitalized")
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined <- Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
Combined <- replace_na(x= Combined,value = 0)
dummy <- as.data.frame(transform(Combined$count.x,cumFreq = cumsum(Combined$count.x)))
Combined$count.x <- dummy$cumFreq
dummy <- as.data.frame(transform(Combined$count.y,cumFreq = cumsum(Combined$count.y)))
Combined$count.y <- dummy$cumFreq
dummy <- as.data.frame(transform(Combined$count,cumFreq = cumsum(Combined$count)))
Combined$count <- dummy$cumFreq
Combined <- rename(Combined, "Hospitalized" = "count.x")
Combined <- rename(Combined, "Deceased" = "count.y")
Combined <- rename(Combined, "Recovered" = "count")
Combined <- Combined[c("date_announced","Hospitalized","Recovered","Deceased")]
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig
runApp('COVID PROJECT')
newD2 <- globaldata2 %>%
group_by(date_announced,current_status) %>%
summarise(count = n())
LineChartR = filter(newD2, current_status == "Recovered")
LineChartD = filter(newD2, current_status == "Deceased")
LineChartA = filter(newD2, current_status == "Hospitalized")
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined <- Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
Combined <- replace_na(x= Combined,value = 0)
dummy <- as.data.frame(transform(Combined$count.x,cumFreq = cumsum(Combined$count.x)))
Combined$count.x <- dummy$cumFreq
dummy <- as.data.frame(transform(Combined$count.y,cumFreq = cumsum(Combined$count.y)))
Combined$count.y <- dummy$cumFreq
dummy <- as.data.frame(transform(Combined$count,cumFreq = cumsum(Combined$count)))
Combined$count <- dummy$cumFreq
Combined <- rename(Combined, "Hospitalized" = "count.x")
Combined <- rename(Combined, "Deceased" = "count.y")
Combined <- rename(Combined, "Recovered" = "count")
Combined <- Combined[c("date_announced","Hospitalized","Recovered","Deceased")]
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig <- fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
marker = list(color = recovered_color), mode = "lines+markers")
fig
fig <- fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
marker = list(color = recovered_color), mode = "lines")
fig
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig <- fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
marker = list(color = recovered_color), mode = "lines")
fig
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color))
fig <- fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
mode = "lines")
fig
runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig = fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
mode = "lines+markers")
fig = fig %>% add_trace(y = Combined$Deceased,name = 'Daily Deceased',line = list(color = death_color),
mode = "markers+lines")
fig = fig %>% layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
hovermode = "compare")
fig
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig = fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
mode = "lines+markers")
fig = fig %>% add_trace(y = Combined$Deceased,name = 'Daily Deceased',line = list(color = death_color),
mode = "markers+lines")
fig = fig %>% layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
hovermode = "compare")
fig
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig = fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
mode = "lines")
fig = fig %>% add_trace(y = Combined$Deceased,name = 'Daily Deceased',line = list(color = death_color),
mode = "lines")
fig = fig %>% layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
hovermode = "compare")
fig
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/$m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig = fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
mode = "lines")
fig = fig %>% add_trace(y = Combined$Deceased,name = 'Daily Deceased',line = list(color = death_color),
mode = "lines")
fig = fig %>% layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
hovermode = "compare")
fig
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig = fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
mode = "lines")
fig = fig %>% add_trace(y = Combined$Deceased,name = 'Daily Deceased',line = list(color = death_color),
mode = "lines")
fig = fig %>% layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
hovermode = "compare")
fig
runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
?renderImage
runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
runApp('COVID PROJECT')
View(dummy)
shiny::runApp('COVID PROJECT')
View(dummy)
View(Combined)
rm(list = ls())
runApp('COVID PROJECT')
rm(list = ls())
runApp('COVID PROJECT')
globaldata2$date_announced <- as.Date(format(as.Date(globaldata2$date_announced,"%d/%m/%Y"),"%Y-%m-%d"))
runApp('COVID PROJECT')
newD2 <- globaldata2 %>%
group_by(date_announced,current_status) %>%
summarise(count = n())
LineChartR = filter(newD2, current_status == "Recovered")
LineChartD = filter(newD2, current_status == "Deceased")
LineChartA = filter(newD2, current_status == "Hospitalized")
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined <- Combined[order(as.Date(Combined$date_announced, format="%Y/%m/%d")),]
View(Combined)
Combined$count.x <- ifelse(!is.na(Combined$count.x),Combined$count.x,0)
Combined$count.y <- ifelse(!is.na(Combined$count.y),Combined$count.y,0)
Combined$count <- ifelse(!is.na(Combined$count),Combined$count,0)
dummy <- as.data.frame(transform(Combined$count.x,cumFreq = cumsum(Combined$count.x)))
Combined$count.x <- dummy$cumFreq
dummy2 <- as.data.frame(transform(Combined$count.y,cumFreq = cumsum(Combined$count.y)))
Combined$count.y <- dummy2$cumFreq
dummy3 <- as.data.frame(transform(Combined$count,cumFreq = cumsum(Combined$count)))
Combined$count <- dummy3$cumFreq
Combined <- rename(Combined, "Hospitalized" = "count.x")
Combined <- rename(Combined, "Deceased" = "count.y")
Combined <- rename(Combined, "Recovered" = "count")
Combined <- Combined[c("date_announced","Hospitalized","Recovered","Deceased")]
class(Combined)
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig = fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
mode = "lines")
fig = fig %>% add_trace(y = Combined$Deceased,name = 'Daily Deceased',line = list(color = death_color),
mode = "lines")
fig = fig %>% layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
hovermode = "compare")
fig
globaldata2$date_announced <- as.Date(format(as.Date(globaldata2$date_announced,"%d/%m/%Y"),"%Y-%m-%d"))
globaldata2 <- globaldata2[(globaldata2$date_announced >= input$daterange1[1] & globaldata2$date_announced <= input$daterange1[2]),]
#DATA CLEANING FOR LINE CHART
newD2 <- globaldata2 %>%
group_by(date_announced,current_status) %>%
summarise(count = n())
LineChartR = filter(newD2, current_status == "Recovered")
LineChartD = filter(newD2, current_status == "Deceased")
LineChartA = filter(newD2, current_status == "Hospitalized")
Combined <- merge(LineChartA,LineChartD,by = 'date_announced',all = TRUE)
Combined <- Combined <- merge(Combined,LineChartR,by = 'date_announced',all = TRUE)
Combined <- Combined[order(as.Date(Combined$date_announced, format="%d/%m/%Y")),]
Combined$count.x <- ifelse(!is.na(Combined$count.x),Combined$count.x,0)
Combined$count.y <- ifelse(!is.na(Combined$count.y),Combined$count.y,0)
Combined$count <- ifelse(!is.na(Combined$count),Combined$count,0)
dummy <- as.data.frame(transform(Combined$count.x,cumFreq = cumsum(Combined$count.x)))
Combined$count.x <- dummy$cumFreq
dummy2 <- as.data.frame(transform(Combined$count.y,cumFreq = cumsum(Combined$count.y)))
Combined$count.y <- dummy2$cumFreq
dummy3 <- as.data.frame(transform(Combined$count,cumFreq = cumsum(Combined$count)))
Combined$count <- dummy3$cumFreq
Combined <- rename(Combined, "Hospitalized" = "count.x")
Combined <- rename(Combined, "Deceased" = "count.y")
Combined <- rename(Combined, "Recovered" = "count")
Combined <- Combined[c("date_announced","Hospitalized","Recovered","Deceased")]
class(Combined)
#PLOTTING THE LINE CHART
fig <- plot_ly(Combined, x = as.Date(Combined$date_announced,"%d/%m/%Y"),y = Combined$Hospitalized,name = 'Daily Confirmed',
type = "scatter",mode = "lines",line = list(color = active_color)
)
fig = fig %>% add_trace(y = Combined$Recovered,name = 'Daily Recovered',line = list(color = recovered_color),
mode = "lines")
fig = fig %>% add_trace(y = Combined$Deceased,name = 'Daily Deceased',line = list(color = death_color),
mode = "lines")
fig = fig %>% layout(title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date"),
hovermode = "compare")
fig
runApp('COVID PROJECT')
runApp('COVID PROJECT')
runApp('COVID PROJECT')
globaldata2$date_announced <- format(as.Date(globaldata2$date_announced,"%Y/%m/%d"),"%d/%m/%Y")
newD2 <- globaldata2 %>%
group_by(date_announced,current_status) %>%
summarise(count = n())
View(LineChartA)
runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
shiny::runApp('COVID PROJECT')
